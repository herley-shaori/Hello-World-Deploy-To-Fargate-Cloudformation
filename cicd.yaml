Parameters:
  CodeCommitRepoName:
    Type: String
    Default: demo-springboot-repository
    AllowedPattern: "[A-Za-z0-9-]+"
  CodeBuildProjectName:
    Type: String
    Default: demo-springboot-to-fargate-codebuild-xxy
    AllowedPattern: "[A-Za-z0-9-]+"
  SGPort:
    Type: String
    Default: 5000
Resources:
  DemoCodeCommit:
      Type: AWS::CodeCommit::Repository
      Properties: 
        RepositoryDescription: Kode program untuk tutorial deploy Java Springboot ke AWS Fargate.
        RepositoryName: !Ref CodeCommitRepoName
        Tags: 
          - Key: department
            Value: demo
  DemoCodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Ref CodeBuildProjectName
      Description: A description about my project
      ServiceRole: arn:aws:iam::623127157773:role/service-role/codebuild-hello-world-sederhana-service-role
      Artifacts:
        Type: no_artifacts
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:4.0
        PrivilegedMode: true
      Source:
        Location: https://git-codecommit.ap-southeast-1.amazonaws.com/v1/repos/demo-springboot-repository
        Type: CODECOMMIT
      TimeoutInMinutes: 10
      Tags:
        - Key: department
          Value: demo
  DemoCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: demo-springboot-to-fargate-codepipeline
      RoleArn: arn:aws:iam::623127157773:role/service-role/AWSCodePipelineServiceRole-ap-southeast-1-Unsimple-Hello-World
      ArtifactStore:
        Type: S3
        Location: !ImportValue CodePipelineS3Bucket
      Stages:
        - Name: Source
          Actions:
          - Name: JavaSource
            ActionTypeId:
              Category: Source
              Owner: AWS
              Version: 1
              Provider: CodeCommit
            OutputArtifacts:
            - Name: SourceCode
            Configuration:
              RepositoryName: !Ref CodeCommitRepoName
              BranchName: master
            RunOrder: 1
        - Name: Build
          Actions:
          - Name: JavaBuild
            InputArtifacts:
              - Name: SourceCode
            ActionTypeId:
              Category: Build
              Owner: AWS
              Version: 1
              Provider: CodeBuild
            Configuration:
              ProjectName: !Ref CodeBuildProjectName
            OutputArtifacts:
            - Name: BuiltCode
            RunOrder: 2
        - Name: Deploy
          Actions:
          - Name: JavaDeploy
            InputArtifacts:
              - Name: BuiltCode
            ActionTypeId:
              Category: Deploy
              Owner: AWS
              Version: 1
              Provider: ECS
            Configuration:
              ClusterName: demo-springboot-to-fargate-cluster
              ServiceName: demo-springboot-to-fargate-service
              FileName: imageexplanations.json
              DeploymentTimeout: '5'
            RunOrder: 3
  DemoECSTask:
    Type: AWS::ECS::TaskDefinition
    Properties: 
      NetworkMode: awsvpc
      Cpu: 256
      Memory: 512
      ExecutionRoleArn: arn:aws:iam::623127157773:role/ecsTaskExecutionRole
      ContainerDefinitions: 
        - Name: hello-world-container
          Image: 623127157773.dkr.ecr.ap-southeast-1.amazonaws.com/demo-springboot-to-fargate-ecr:latest
          PortMappings: 
            - ContainerPort: 5000
              HostPort: 5000
          Memory: 512
          Essential: true
          Privileged: false
          HealthCheck:
            command:
              - "CMD-SHELL"
              - "curl -f http://localhost:5000/api/hello || exit 1"
            interval: 60
            retries: 2
            timeout: 60
      RequiresCompatibilities:
        - FARGATE
  DemoECSCluster:
    Type: 'AWS::ECS::Cluster'
    DependsOn: DemoCodePipeline
    Properties:
      ClusterName: demo-springboot-to-fargate-cluster
      Tags:
        - Key: department
          Value: demo
  ECSServiceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SecurityGroup untuk ECS Service. Hanya membuka port 5000.
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        FromPort: !Ref SGPort
        IpProtocol: tcp
        ToPort: !Ref SGPort
  DemoECSService:
    Type: AWS::ECS::Service
    DependsOn: DemoCodePipeline
    Properties:
      ServiceName: demo-springboot-to-fargate-service
      TaskDefinition: !Ref DemoECSTask
      Cluster: !Ref DemoECSCluster
      DeploymentConfiguration:
        MinimumHealthyPercent: 100
        MaximumPercent: 200
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
          AwsvpcConfiguration: 
              AssignPublicIp: ENABLED
              Subnets:
                - subnet-2c5cea4a
              SecurityGroups: 
                - !GetAtt ECSServiceSecurityGroup.GroupId